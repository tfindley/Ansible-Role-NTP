---
# tasks file for ntp::main

- name: Chrony.Main - Gather facts from server
  ansible.builtin.setup:
    filter: ansible_default_ipv4.address

- name: Chrony.Main - Gather service facts from server
  ansible.builtin.service_facts:

# Context
# -------
# The context section is used to load variables. This has been built in a specific
 #  order so that subsequent variable files override earlier variables.
# This generates a specicifity very similar to what we see in Chef.
# The order is as follows:
#  - OS Family (i.e: Debian, RedHat)
#  - Distribution (i.e: RedHat Enterprise, CentOS, Ubuntu)
#  - LSB name (i.e: Raspbian) - only applicable to Debian-based OS's,
#     and primarily needed to support Raspbian on Raspberry Pi's as its the only place Raspbian is specified
#  - Distribution-Version (i.e: Debian-10)

# Remember these are CASE SENSITIVE

# This deals with family-specific variabiles. Store them in /var/family/___.yml
- name: Chrony.Main - Load OS family specific variables file
  ansible.builtin.include_vars:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "context/family/{{ ansible_os_family }}.yml" # RedHat.yml
      skip: true

# This deals with os-specific variabiles. Store them in /var/os/___.yml
- name: Chrony.Main - Load OS specific variables file
  ansible.builtin.include_vars:
    file: "{{ item }}"
  with_first_found:
    - files:
        - "context/os/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml" # Debian-10.yml
        - "context/os/{{ ansible_lsb.id }}.yml" # Raspbian.yml
        - "context/os/{{ ansible_distribution }}.yml" # RedHat.yml
      skip: true


# We load these in blocks to that we dont have to copy every single varialbe into files with a higher specicity.
# Remember:
#   - Variables in more specific files completely overwrite variables loaded before it.
#   - Variables do not concatonate. You must specify the whole variable again.
# -------

# Remove old NTPq packages - we don't need these any more with Chrony.
- name: Chrony.Main - Handoff to PreFlight task
  ansible.builtin.include_tasks: preflight.yml

# Install Chrony and configure
- name: Chrony.Main - Handoff to Install task
  ansible.builtin.include_tasks: install.yml

# Configure firewall to allow outbound Chrony connections for the server.
- name: Chrony.Main - Hand off to FirewallD task
  ansible.builtin.include_tasks: firewall/firewalld.yml
  when: # Only execute this task if firewalld is deteted as installed.
    - "'firewalld.service' in services"
    - ansible_facts.services['firewalld.service'].state == 'running'
